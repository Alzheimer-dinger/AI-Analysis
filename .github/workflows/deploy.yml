name: Build, Push, and Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    outputs:
      image_uri: ${{ steps.push_image.outputs.image_uri }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        id: push_image
        run: |
          IMAGE_URI="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/alzheimer-analysis:latest"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to on-premise server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "Authenticating to Google Cloud on remote server..."
            echo '${{ secrets.GCP_SA_KEY }}' | gcloud auth activate-service-account --key-file=- --project=${{ secrets.GCP_PROJECT_ID }}

            echo "Configuring Docker for Artifact Registry..."
            gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

            echo "Pulling latest image from registry..."
            docker pull ${{ needs.build-and-push.outputs.image_uri }}

            echo "Stopping and removing existing container..."
            docker stop alzheimer-analysis-container || true
            docker rm alzheimer-analysis-container || true

            echo "Starting new container..."
            docker run -d \
              --name alzheimer-analysis-container \
              -p 8080:8080 \
              --restart always \
              -e GCP_PROJECT='${{ secrets.GCP_PROJECT_ID }}' \
              -e GCP_REGION='${{ secrets.GCP_REGION }}' \
              -e DEMENTIA_ANALYSIS_ENDPOINT_ID='${{ secrets.DEMENTIA_ANALYSIS_ENDPOINT_ID }}' \
              -e GEMINI_MODEL_NAME='${{ secrets.GEMINI_MODEL_NAME }}' \
              -e HF_TOKEN='${{ secrets.HF_TOKEN }}' \
              -e DB_HOST='${{ secrets.MYSQL_HOST }}' \
              -e DB_USER='${{ secrets.MYSQL_USERNAME }}' \
              -e DB_PASSWORD='${{ secrets.MYSQL_PASSWORD }}' \
              -e DB_NAME='${{ secrets.MYSQL_DATABASE }}' \
              -e DB_PORT='${{ secrets.MYSQL_PORT }}' \
              ${{ needs.build-and-push.outputs.image_uri }}
